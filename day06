#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>

//x%y == z 就是y被x整除余z。
//f10 - 逐过程 - 看的不细
//f11 - 逐语句 - 看的细
//数值从大到小排序
//int main()
//{
//	int a = 0;
//	int b = 0;
//	int c = 0;
//	scanf("%d%d%d",&a,&b,&c);
//	if (a<b)
//	{
//		int d = a;
//		a = b;
//		b = d;
//	}
//	if (a < c)
//	{
//		int d = a;
//		a = c;
//		c = d;
//	}
//	if (b < c)
//	{
//		int d = b;
//		b = c;
//		c = d;
//	}
//	//可以用函数来简化这个代码
//	printf("%d %d %d\n", a, b, c);
//
//	return 0;
//}

//1 - 100 3的倍数
//int main()
//{
//	int a = 0;
//	for (int a = 0; a <= 100; a++)
//	{
//		if (a%3 == 0)
//		{
//			printf("%d\n", a);
//		}
//	}
//
//	return 0;
//}
//int main()
//{
//	int a = 0;
//	for (int a = 0; a <= 100; a+=3)
//	{
//		printf("%d\n", a);
//	}
//
//	return 0;
//}

//最大公约数
//int main()
//{
//	int a = 0;
//	int b = 0;
//	scanf("%d%d", &a, &b);//24 18
//	int max = 0;//假设最大公约数max就是m和n的最小值
//		if (a>b)
//		{
//			max = b;
//		}
//		else
//		{
//			max = a;
//		}
//		while (1)
//		{
//			if (b % max == 0 && a % max == 0)
//			{
//				printf("最大公约数 = %d\n",max);
//				break;
//			}
//			max--;
//		}
//
//
//	return 0;
//}

//辗转相除法
//int  main()
//{
//	int a = 0;
//	int b = 0;
//	scanf("%d%d", &a, &b);
//	int c = 0;
//	while (c = a%b)//写反也行比如：18 24 它会18%24=18因为他不够除商0余18
//	{
//		a = b;
//		b = c;
//
//	}
//	printf("最大公约数：%d\n", b);
//	//最小公倍数 = 两数相乘/最大公约数；
//	return 0;
//}

//打印1000 - 2000年闰年
//闰年：1.能被4整除但是不能被100整除，2.能被400整除
//int main()
//{
//	int a = 0;
//	int b = 0;
//	for (int a = 1000; a <= 2000; a++)
//	{
//		/*if (a%4 == 0 )
//		{
//			if (a%100 != 0)
//			{
//				printf("%d\n", a);
//				b++;
//				
//			}
//		}
//		if (a%400 == 0)
//		{
//			printf("%d\n", a);
//			b++;
//		}*/
//		if (((a%4 == 0&& a%100 != 0))||(a%400 == 0))//另一种解法
//		{
//			printf("%d ", a);
//			b++;
//		}
//	}
//	printf("\n%d\n", b);
//	return 0;
//}

//100 - 200之间的素数
//素数 - 质数
//只能被1和它本身整除,所以是2 - b-1之间去试除1，看能不能被整除
//int main()
//{
//	int a = 0;
//	
//	for (int  a = 100; a <= 200; a++)
//	{
//		int b = 0;
//		for (b = 2; b < a; b++)
//		{
//			if (a % b == 0)
//			{
//				break;
//			}
//		}
//		if (a == b)
//		{
//			printf("%d\n", a);
//		}
//	}
//	
//
//	return 0;
//}

//sqrt 是开平方函数需要头文件math.h
//m = a*b
// a和b中的数至少有一个是<=开平方m的
//16 = 2*8 = 4*4
//#include<math.h>
//int main()
//{
//	int count = 0;
//	int a = 0;
//	for ( a = 101; a <= 200 ; a += 2)//优化偶数不可能是素数
//	{
//		int b = 0;
//		int c = 1;
//		for (b = 2; b <= sqrt(a); b++)//以前是需要2-99式除一边，现在是2-10之间式除一变 (素数：只能被1和它本身整除)
//		{
//			if (a % b == 0)
//			{
//				c = 0;
//				break;
//			}
//		}
//		if (c == 1)
//		{
//			count++;
//			printf("%d\n", a);
//		}
//	}
//	printf("%d", count);
//	return 0;
//}

//现在开始
//goto语句 随意用，从理论来讲goto语句没有必要的，实践中没有goto语句也可以很容易写出代码
//不建议用goto语句，但是某些场合下goto还是能用到的，最常见的终止程序在某些深度嵌套的结构的处理中，列如一次跳出两层或多层循环。循环时比较适合的，其他不建议
//int mian()
//{
//	a:
//	printf("haha");
//	printf("hehe");
//	goto a;//goto字面意思去哪，去a，a在上面，去到a然后执行a下面的代码。
//
//	return 0;
//}

//关机程序
//只要运行起来，电脑就在1分钟内关机，输入我是猪，取消关机。
//shutdown -s -t 60  1分钟关机
//shutdown -a  取消关机

//C语言提供了system（) - 执行系统命令
//#include<string.h>
//#include<stdlib.h>
//int main()
//{
//	char a[20] = { 0 };//数组是存输出的信息，所以scanf函数中不用加入&地址符号
//	system("shutdown -s -t 120");
//	//qwer:
//	while (1)
//	{
//		printf("请注意，你的电脑在1分钟内关机，如果输入：我是猪，就取消关机\n");
//		scanf("%s", a);//数组不用
//		if (strcmp(a, "我是猪") == 0)//字符串比较不能用 == 应该使用strcmp（） string compare。strcmp比较时相等时输出0，不相等时要么<0，要么>0，strcmp比较时输出0 == 0就相等
//		{
//			system("shutdown -a");
//			break;
//		}
//	}
//	//else
//	//{
//		//goto qwer;
//	//}
//
//	return 0;
//}

// goto语句只能在一个函数内跳转，不能跨函数
//void tet()
//{
//	qwer:
//	return 0;
//}
//int main()
//{
//	goto qwer;
//	return 0;
//}
//分支函数，循环ok

//函数，非常非常重要  所有的库函数都是集成放在头文件里头的
//函数：子程序，一个或多个语句块组成，负责完成特定的任务，相对于其他代码，具有相对的独立性。
// 一般会有输入参数并有返回值，提供过程的封装和细节的隐藏。函数的特点
//f(x) = 2*x+1; 数学中的函数
//f(x,y) = x+y; 数学中的函数
//C语言函数的分类
//	1.库函数
//	2.自定义函数
//常用的库函数
// lo函数：输入输出函数如printf,scanf,getchar,putchar
// 字符串操作函数：如strcmp比较字符串，strlen求字符串长度
// 字符操作函数：如toupper小写转大写
// 内存操作函数：如memory内存的意思，memcpy,memcmp,memset内存设置
// 时间/日期函数：如time
// 数学函数：如sqrt开平方，pow求次方
// 其他库函数：如其他
//
//#include <string.h>
//int main()
//{
//	char a[20] = {0};//初始化数组元素的时候放的，以后会将数组先别着急。
//	char b[] = "holle word";//\0也会被复制过去
//	strcpy(a, b);//a是目的地，b复制目标。
//	printf(" % s\n", a);//%s - 以字符串的格式打印
//	return 0;
//}
#include <memory.h>
int main()
{
	char a[] = "holle word";//前5个字符换成x
	memset(a, 'x', 5);//memset(内存设置)（空间地址，整型值(字符的ascll值是整型)，前几个字节）
	printf("%s\n", a);
	//以后要用查询工具来学习
	return 0;
}
